use strict;

##
## A few variables have hard-coded values, and a few may be defined
## using environment variables.
##

## some environment variables needs untainting
sub u { ($_[0] =~ /(.*)/g)[0] }

## GENERAL

chomp($myhostname = $ENV{MYHOSTNAME} // `hostname -f`);
chomp($mydomain = $ENV{MYDOMAIN} // `dnsdomainname`);

$max_requests = 1 * ($ENV{MAX_REQUESTS} // 20);
$max_servers  = 1 * ($ENV{MAX_SERVERS} // 2);

## DKIM VERIFICATION

$enable_dkim_verification = $ENV{ENABLE_DKIM_VERIFICATION};

## MTA INTERFACE - INPUT

$inet_socket_port = 1 * ($ENV{INET_SOCKET_PORT} // 10024);

$inet_socket_bind = '*';

@inet_acl = qw( 0.0.0.0/0 );

## MTA INTERFACE - OUTPUT

$localhost_name = $ENV{LOCALHOST_NAME} // $myhostname;

## MAIL FORWARDING

$forward_method = "smtp:" . u($ENV{POSTFIX_IP} // "127.0.0.1") . ":10025";

$final_virus_destiny = {D_DISCARD => D_DISCARD, D_REJECT => D_REJECT, D_PASS => D_PASS}->{$ENV{FINAL_VIRUS_DESTINY}} // D_DISCARD;
$final_banned_destiny = {D_DISCARD => D_DISCARD, D_REJECT => D_REJECT, D_PASS => D_PASS}->{$ENV{FINAL_BANNED_DESTINY}} // D_DISCARD;
$final_spam_destiny = {D_DISCARD => D_DISCARD, D_REJECT => D_REJECT, D_PASS => D_PASS}->{$ENV{FINAL_SPAM_DESTINY}} // D_PASS;
$final_bad_header_destiny = {D_DISCARD => D_DISCARD, D_REJECT => D_REJECT, D_PASS => D_PASS}->{$ENV{FINAL_BAD_HEADER_DESTINY}} // D_PASS;

## NOTIFICATIONS (DSN, admin, recip)

$notify_method  = "smtp:" . u($ENV{POSTFIX_IP} // "127.0.0.1") . ":10025";

## MAIL DECODING

$path = "/bin:/sbin:/usr/bin:/usr/sbin";

@av_scanners = ();

if ( $ENV{CLAMAV_HOST} ne "" ) {
	push(@av_scanners,

### http://www.clamav.net/
 ['ClamAV-clamd',
   \&ask_daemon, ["*", u("clamd:$ENV{CLAMAV_HOST}:3310")],
   qr/\bOK$/m, qr/\bFOUND$/m,
   qr/^.*?: (?!Infected Archive)(.*) FOUND$/m ],
   );

}

$sa_spam_subject_tag = $ENV{SA_SPAM_SUBJECT_TAG};
$sa_spam_subject_tag1 = $ENV{SA_SPAM_SUBJECT_TAG1};
$sa_tag_level_deflt = $ENV{SA_TAG_LEVEL_DEFLT};
$sa_tag2_level_deflt = $ENV{SA_TAG2_LEVEL_DEFLT};
$sa_tag3_level_deflt = $ENV{SA_TAG3_LEVEL_DEFLT};
$sa_kill_level_deflt = $ENV{SA_KILL_LEVEL_DEFLT};
$sa_dsn_cutoff_level = $ENV{SA_DSN_CUTOFF_LEVEL};
$sa_crediblefrom_dsn_cutoff_level = $ENV{SA_CREDIBLEFROM_DSN_CUTOFF_LEVEL};
$sa_quarantine_cutoff_level = $ENV{SA_QUARANTINE_CUTOFF_LEVEL};

1;  # ensure a defined return
